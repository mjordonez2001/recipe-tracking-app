{"version":3,"sources":["RecipeCreate.js","Recipe.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","addRecipe","initialFormState","name","cuisine","photo","ingredients","preparation","useState","formData","setFormData","handleChange","target","value","onSubmit","event","preventDefault","id","type","placeholder","required","onChange","Recipe","recipe","index","deleteRecipe","src","className","onClick","RecipeList","recipes","allRecipes","map","key","RecipeData","App","setRecipes","indexToDelete","currentRecipes","filter","post","newRecipe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAkGeA,MAhGf,YAAoC,IAAbC,EAAY,EAAZA,UAGfC,EAAmB,CACvBC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,YAAa,GACbC,YAAa,IAIf,EAAgCC,mBAAS,eAAIN,IAA7C,mBAAOO,EAAP,KAAiBC,EAAjB,KAGMC,EAAe,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACrBF,EAAY,2BACPD,GADM,kBAERG,EAAOT,KAAOS,EAAOC,UAe1B,OACE,0BAAMV,KAAK,SAASW,SAXA,SAACC,GACrBA,EAAMC,iBACNf,EAAUQ,GAEVC,EAAY,eACPR,MAOH,+BACE,+BACE,4BACE,4BACE,2BACEe,GAAG,OACHC,KAAK,OACLf,KAAK,OACLgB,YAAY,OACZC,UAAQ,EACRC,SAAUV,EACVE,MAAOJ,EAASN,QAEpB,4BACE,2BACEc,GAAG,UACHC,KAAK,OACLf,KAAK,UACLiB,UAAQ,EACRD,YAAY,UACZE,SAAUV,EACVE,MAAOJ,EAASL,WAEpB,4BACE,2BACEa,GAAG,QACHC,KAAK,OACLf,KAAK,QACLiB,UAAQ,EACRD,YAAY,MACZE,SAAUV,EACVE,MAAOJ,EAASJ,SAEpB,4BACE,8BACEY,GAAG,cACHd,KAAK,cACLiB,UAAQ,EACRD,YAAY,cACZE,SAAUV,EACVE,MAAOJ,EAASH,eAEpB,4BACE,8BACEW,GAAG,cACHd,KAAK,cACLiB,UAAQ,EACRD,YAAY,cACZE,SAAUV,EACVE,MAAOJ,EAASF,eAEpB,4BACE,4BAAQW,KAAK,UAAb,gBCzECI,MAdf,YAAgD,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,aAE5B,OACI,4BACI,4BAAKF,EAAOpB,MACZ,4BAAKoB,EAAOnB,SACZ,4BAAI,yBAAKsB,IAAKH,EAAOlB,SACrB,wBAAIsB,UAAU,cAAa,2BAAIJ,EAAOjB,cACtC,wBAAIqB,UAAU,cAAa,2BAAIJ,EAAOhB,cACtC,4BAAI,4BAAQJ,KAAK,SAASyB,QAAS,kBAAMH,EAAaD,KAAlD,aCqBDK,MA7Bf,YAA8C,IAAzBC,EAAwB,EAAxBA,QAASL,EAAe,EAAfA,aAGtBM,EAAaD,EAAQE,KAAI,SAACT,EAAQC,GACtC,OAAO,kBAAC,EAAD,CAAQD,OAAQA,EAAQC,MAAOA,EAAOS,IAAKT,EAAOC,aAAcA,OAIzE,OACE,yBAAKE,UAAU,eACb,+BACE,+BACE,4BACE,oCACA,uCACA,qCACA,2CACA,2CACA,yCAGJ,+BACGI,MCHIG,EAjBI,CACjB,CACE/B,KAAM,uBACNC,QAAS,WACTC,MAAO,gGACPC,YAAa,sJACbC,YAAa,4RAEf,CACEJ,KAAM,YACNC,QAAS,UACTC,MAAO,4EACPC,YAAa,mNACbC,YAAa,kKCkBF4B,MA9Bf,WAEE,MAA8B3B,mBAAS0B,GAAvC,mBAAOJ,EAAP,KAAgBM,EAAhB,KAmBA,OACE,yBAAKT,UAAU,OACb,gCAAQ,uDACR,kBAAC,EAAD,CAAYG,QAASA,EAASL,aAXb,SAACY,GAEpBD,GAAW,SAACE,GAAD,OACTA,EAAeC,QAAO,SAACC,EAAMhB,GAAP,OAAiBA,IAAUa,WASjD,kBAAC,EAAD,CAAcpC,UApBA,SAACwC,GACjBL,EAAW,GAAD,mBACLN,GADK,CAERW,UCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.adf04bb9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({addRecipe}) {\n\n  // the initial form state, has everything as empty strings\n  const initialFormState = {\n    name: \"\",\n    cuisine: \"\",\n    photo: \"\",\n    ingredients: \"\",\n    preparation: \"\"\n  }\n\n  // creates a new state for the form data\n  const [formData, setFormData] = useState({...initialFormState});\n\n  // change handler that updates the current form data\n  const handleChange = ({target}) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value\n    });\n  }\n\n  // submit handler that prevents default, adds a new recipe to the recipes array, and resets the form\n  const submitHandler = (event) => {\n    event.preventDefault();\n    addRecipe(formData)\n\n    setFormData({\n      ...initialFormState\n    })\n  }\n  \n  // create form format\n  return (\n    <form name=\"create\" onSubmit={submitHandler}>\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <input \n                id=\"name\" \n                type=\"text\" \n                name=\"name\" \n                placeholder=\"Name\" \n                required\n                onChange={handleChange} \n                value={formData.name} />\n            </td>\n            <td>\n              <input \n                id=\"cuisine\" \n                type=\"text\" \n                name=\"cuisine\"\n                required \n                placeholder=\"Cuisine\" \n                onChange={handleChange} \n                value={formData.cuisine} />\n            </td>\n            <td>\n              <input \n                id=\"photo\" \n                type=\"text\" \n                name=\"photo\" \n                required\n                placeholder=\"URL\" \n                onChange={handleChange} \n                value={formData.photo} />\n            </td>\n            <td>\n              <textarea \n                id=\"ingredients\" \n                name=\"ingredients\" \n                required\n                placeholder=\"Ingredients\" \n                onChange={handleChange} \n                value={formData.ingredients} />\n            </td>\n            <td>\n              <textarea \n                id=\"preparation\" \n                name=\"preparation\" \n                required\n                placeholder=\"Preparation\" \n                onChange={handleChange} \n                value={formData.preparation} />\n            </td>\n            <td>\n              <button type=\"submit\">Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React from \"react\";\n\nfunction Recipe({recipe, index, deleteRecipe}) {\n    // recipe format\n    return (\n        <tr>\n            <td>{recipe.name}</td>\n            <td>{recipe.cuisine}</td>\n            <td><img src={recipe.photo} /></td>\n            <td className=\"content_td\"><p>{recipe.ingredients}</p></td>\n            <td className=\"content_td\"><p>{recipe.preparation}</p></td>\n            <td><button name=\"delete\" onClick={() => deleteRecipe(index)}>Delete</button></td>\n        </tr>\n    )\n}\n\nexport default Recipe;","import React from \"react\";\nimport Recipe from \"./Recipe\";\n\nfunction RecipeList({recipes, deleteRecipe}) {\n\n  // maps all the current recipes in to the Recipe component\n  const allRecipes = recipes.map((recipe, index) => {\n    return <Recipe recipe={recipe} index={index} key={index} deleteRecipe={deleteRecipe}/>;\n  });\n\n  // recipe list format\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {allRecipes}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\"\n\nfunction App() {\n  // creates a state for all recipes. uses the RecipeData array as a starting point\n  const [recipes, setRecipes] = useState(RecipeData);\n\n  // handler for adding new recipes\n  const addRecipe = (newRecipe) => {\n    setRecipes([\n      ...recipes,\n      newRecipe\n    ])\n  }\n\n  // handler for deleting recipes\n  const deleteRecipe = (indexToDelete) => {\n    // finds the recipe to delete based on the given index\n    setRecipes((currentRecipes) =>\n      currentRecipes.filter((post, index) => index !== indexToDelete)\n    ) \n  }\n  \n  // entire app format\n  return (\n    <div className=\"App\">\n      <header><h1>Delicious Food Recipes</h1></header>\n      <RecipeList recipes={recipes} deleteRecipe={deleteRecipe} />\n      <RecipeCreate addRecipe={addRecipe} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}